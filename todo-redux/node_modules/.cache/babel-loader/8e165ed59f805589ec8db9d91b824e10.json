{"ast":null,"code":"var _jsxFileName = \"/home/etech/Desktop/assignment/ajax/todoApp-Redux-todoApp-redux/todoredux/src/App.js\";\nimport React from \"react\"; // import \"./App.css\";\n\nimport { connect } from \"react-redux\";\nimport { getTodo, addTodo } from \"./action/addTodo\";\n\nclass App extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: \"\",\n      data: [],\n      onclick: false\n    };\n\n    this.changervalue = e => {\n      this.setState({\n        data: e.target.value\n      });\n    };\n\n    this.changeSubmit = e => {\n      this.setState({\n        inputValue: \"\"\n      });\n      this.props.addTodoRequest();\n      let id = this.props.getTodo.data.length;\n      let newData = [...this.props.getTodo.data, ...[{\n        id: id,\n        name: this.state.inputValue,\n        checked: false\n      }]];\n      this.props.addTodoRequest(newData);\n      e.preventDefault();\n\n      if (this.state.inputValue === \"\") {\n        this.setState({\n          onclick: false\n        });\n      } else {\n        this.setState({\n          onclick: true\n        });\n      }\n    };\n\n    this.changeInput = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.changeCheckbox = event => {\n      let checkValue = event.target.name;\n      let data = this.props.getTodo.data.map(val => {\n        if (val.name === checkValue) {\n          val.checked = !val.checked;\n        }\n\n        return val;\n      });\n      this.setState({\n        data: data\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.props.getTodoRequest();\n  }\n\n  render() {\n    if (!this.props.getTodo.data) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"User List\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.props.getTodo.data.map((val, key) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        checked: val.checked,\n        type: \"checkbox\",\n        id: val.id,\n        value: val.checked,\n        name: val.name,\n        onChange: this.changeCheckbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: val.name,\n        onChange: this.changervalue,\n        style: {\n          border: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }\n      }), \" \", val.checked ? \"completed\" : null, \" \"));\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Todo...\",\n      value: this.state.inputValue,\n      onChange: this.changeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Add List\"));\n  }\n\n}\n\nconst getProps = state => {\n  return {\n    getTodo: state.getTodo,\n    addTodo: state.inputValue\n  };\n};\n\nconst dispatchProps = dispatch => ({\n  getTodoRequest: () => dispatch(getTodo()),\n  addTodoRequest: data => dispatch(addTodo(data))\n});\n\nexport default connect(getProps, dispatchProps)(App);","map":{"version":3,"sources":["/home/etech/Desktop/assignment/ajax/todoApp-Redux-todoApp-redux/todoredux/src/App.js"],"names":["React","connect","getTodo","addTodo","App","PureComponent","state","inputValue","data","onclick","changervalue","e","setState","target","value","changeSubmit","props","addTodoRequest","id","length","newData","name","checked","preventDefault","changeInput","changeCheckbox","event","checkValue","map","val","componentWillMount","getTodoRequest","render","key","border","getProps","dispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { getTodo, addTodo } from \"./action/addTodo\";\n\nclass App extends React.PureComponent {\n  state = {\n    inputValue: \"\",\n    data: [],\n    onclick: false,\n  };\n  componentWillMount() {\n    this.props.getTodoRequest();\n  }\n  changervalue = (e) => {\n   this.setState({data:e.target.value})\n  };\n  changeSubmit = (e) => {\n    this.setState({ inputValue: \"\" });\n    this.props.addTodoRequest();\n    let id = this.props.getTodo.data.length;\n    let newData = [\n      ...this.props.getTodo.data,\n      ...[\n        {\n          id: id,\n          name: this.state.inputValue,\n          checked: false,\n        },\n      ],\n    ];\n    this.props.addTodoRequest(newData);\n    e.preventDefault();\n    if (this.state.inputValue === \"\") {\n      this.setState({ onclick: false });\n    } else {\n      this.setState({ onclick: true });\n    }\n  };\n  changeInput = (e) => {\n    this.setState({ inputValue: e.target.value });\n  };\n  changeCheckbox = (event) => {\n    let checkValue = event.target.name;\n    let data = this.props.getTodo.data.map((val) => {\n      if (val.name === checkValue) {\n        val.checked = !val.checked;\n      }\n      return val;\n    });\n    this.setState({ data: data });\n  };\n  render() {\n    if (!this.props.getTodo.data) return null;\n    return (\n      <div>\n        <h4>User List</h4>\n        <ul>\n          {this.props.getTodo.data.map((val, key) => {\n            return (\n              <li key={key}>\n                <input\n                  checked={val.checked}\n                  type=\"checkbox\"\n                  id={val.id}\n                  value={val.checked}\n                  name={val.name}\n                  onChange={this.changeCheckbox}\n                />\n                <span> <input\n                    type=\"text\"\n                    value={val.name}\n                    onChange={this.changervalue}\n                    style={{border:'none'}} />{\" \"}\n                  {val.checked ? \"completed\" : null}{\" \"}</span>\n                \n              </li>\n            );\n          })}\n        </ul>\n        <input\n          type=\"text\"\n          placeholder=\"Todo...\"\n          value={this.state.inputValue}\n          onChange={this.changeInput}\n        ></input>\n        <br />\n        <button type=\"submit\" onClick={this.changeSubmit}>\n          Add List\n        </button>\n      </div>\n    );\n  }\n}\n\nconst getProps = (state) => {\n  return { getTodo: state.getTodo, addTodo: state.inputValue };\n};\n\nconst dispatchProps = (dispatch) => ({\n  getTodoRequest: () => dispatch(getTodo()),\n  addTodoRequest: (data) => dispatch(addTodo(data)),\n});\nexport default connect(getProps, dispatchProps)(App);\n"]},"metadata":{},"sourceType":"module"}